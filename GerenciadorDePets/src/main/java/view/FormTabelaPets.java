//Leonardo Silva e Cruz a2304805

package view;

import java.util.ArrayList;
import java.util.List;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author leonc
 */
public class FormTabelaPets extends javax.swing.JFrame {
    
    public void tabela(){}
    public int inserir(int i){return 0;}
    public void consultar(){}
    public int alterar(int i){return 0;}
    public void excluir(int i){}
    
    
    //MÉTODO SINGLETON
    private static FormTabelaPets tablePlacaMae;
    
    private FormTabelaPets() {
        initComponents();
        //listagem();
    }
    
    /*public void listagem(){
        if(Tabela.getRowCount()==0){
            DefaultTableModel model = (DefaultTableModel)Tabela.getModel();
            for(PlacaMae pg : DBControl.genDBControl().getListPlacaMae()){
                String m2list = "";
                if(!pg.getM2SlotList().isEmpty()){
                    for(M2Slot m2 : pg.getM2SlotList()){
                        m2list = m2list + (""+m2.getType()+m2.getGen()+m2.getLines()+m2.getSlotSize()) + "|";
                    }
                    m2list = m2list.substring(0, m2list.length() - 1);
                }
                String pcilist = "";
                for(PCISlot pci : pg.getPCISlotList()){
                    pcilist = pcilist + (""+pci.getGen()+""+pci.getLines()+""+pci.getSlotSize()) + "|";
                }
                pcilist = pcilist.substring(0, pcilist.length() - 1);
                model.addRow(new Object[]{pg.getMarca(),pg.getModelo(),pg.getMaxMem()+"Gb",pg.getQtdSlotMem(),pg.getTypeSlotMem(),pg.getChipset(),pg.getTypeSlotProc(),pg.getForma(),m2list,pcilist});        
            }
//             
            TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(Tabela.getModel());
            Tabela.setRowSorter(sorter);

            List<RowSorter.SortKey> sortKeys = new ArrayList<>(25);
            sortKeys.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
            Tabela.getRowSorter().setSortKeys(sortKeys);
        }
    }*/
    
    public static FormTabelaPets genTabela(){
        if(tablePlacaMae == null){
            tablePlacaMae = new FormTabelaPets();
        }
        return tablePlacaMae;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Tabela = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        butFechar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        Tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Marca", "Modelo", "Memória Máxima", "Slot(s) de Memória", "Tipo de Memória", "Chipset", "Socket", "Formato", "Slots M2", "Slots PCI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabela.setCellSelectionEnabled(true);
        Tabela.setShowHorizontalLines(true);
        jScrollPane1.setViewportView(Tabela);

        jButton1.setText("Atualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        butFechar.setBackground(new java.awt.Color(255, 204, 204));
        butFechar.setText("Fechar");
        butFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 684, Short.MAX_VALUE)
                        .addComponent(butFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butFechar)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        limparCampos();
        //listagem();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void butFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butFecharActionPerformed
        sair();
    }//GEN-LAST:event_butFecharActionPerformed

    //Sobrescrita
    public void sair(){
        limparCampos();
        dispose();
    }
    
    //Sobrescrita
    public void limparCampos(){
        DefaultTableModel model = (DefaultTableModel)Tabela.getModel(); 
        for(int i = (model.getRowCount()) -1; i >=0; i--){
           model.removeRow(i); 
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormTabelaPets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormTabelaPets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormTabelaPets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormTabelaPets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormTabelaPets().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabela;
    private javax.swing.JButton butFechar;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
